name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME: demo1509
  IMAGE_TAG: latest
  PACKAGE_REGISTRY: ghcr.io
  PACKAGE_OWNER: ${{ github.actor }}
  PACKAGE_NAME: demo1509
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AKS_CLUSTER_NAME: demo
  AKS_RESOURCE_GROUP: aks-demo-alb-rg
  AKS_NAMESPACE: demo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # build java app using java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Build with Maven
        run: mvn clean package

      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.PACKAGE_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ env.PACKAGE_REGISTRY }}/${{ env.PACKAGE_OWNER }}/${{ env.PACKAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ env.PACKAGE_REGISTRY }}/${{ env.PACKAGE_OWNER }}/${{ env.PACKAGE_NAME }}:${{ env.IMAGE_TAG }}        
      
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

      - name: Deploy Kubernetes manifests
        run: kubectl apply -f k8s/ -n ${{ env.AKS_NAMESPACE }}
